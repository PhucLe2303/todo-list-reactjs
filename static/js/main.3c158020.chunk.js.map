{"version":3,"sources":["components/TaskForm.js","components/Search.js","components/Sort.js","components/Control.js","components/TaskItem.js","components/TaskList.js","App.js","serviceWorker.js","index.js"],"names":["TaskForm","props","onCloseForm","onChange","event","target","name","value","setState","onSubmit","onSubmitForm","state","preventDefault","onClear","status","id","this","task","nextProps","className","onClick","type","placeholder","Component","Search","onSearch","keyWord","aria-label","aria-describedby","Sort","sortBy","sortValue","onSort","data-toggle","aria-haspopup","aria-expanded","Control","TaskItem","onUpdateStatus","onDelete","onUpdate","index","TaskList","onFilter","filterName","filterStatus","elmtasks","tasks","map","key","scope","App","onToggleForm","isDisplayForm","taskEditting","data","generateID","push","findIndexByID","localStorage","setItem","JSON","stringify","newTasks","forEach","splice","temp","onShowForm","findIndex","parseInt","filter","toLowerCase","keyword","getItem","parse","Math","floor","random","toString","substring","s4","indexOf","orderBy","elmTaskForm","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3c158020.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\n\r\n\r\nclass TaskForm extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      id:\"\",\r\n      name:\"\",\r\n      status:false\r\n    }\r\n  }\r\n\r\n  componentWillMount(){\r\n    if(this.props.task){\r\n      this.setState({\r\n        id:this.props.task.id,\r\n        name:this.props.task.name,\r\n        status:this.props.task.status\r\n      });\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if(nextProps&&nextProps.task){\r\n      this.setState({\r\n        id:nextProps.task.id,\r\n        name:nextProps.task.name,\r\n        status:nextProps.task.status\r\n      });\r\n    }else if(nextProps.task===null){\r\n      this.setState({\r\n        id:\"\",\r\n        name:\"\",\r\n        status:false\r\n      });\r\n    }\r\n  }\r\n\r\n  onCloseForm=()=>{\r\n     this.props.onCloseForm();\r\n  }\r\n\r\n  onChange=(event)=>{\r\n    let target=event.target;\r\n    let name=target.name;\r\n    let value=target.value;\r\n    if(name===\"status\"){\r\n      value=target.value==='true'?true:false;\r\n    }\r\n    this.setState({\r\n      [name]:value\r\n    })\r\n  }\r\n\r\n  onSubmit=(event)=>{\r\n    this.props.onSubmitForm(this.state);\r\n    event.preventDefault();\r\n  //  this.onClear()\r\n  }\r\n\r\n  onClear=()=>{\r\n    this.setState({\r\n      name:\"\",\r\n      status:false\r\n    })\r\n    this.onCloseForm();\r\n  }\r\n\r\n  render() {\r\n    let {id}=this.state;\r\n    return (\r\n      <div className=\"card bg-light\">\r\n        <div className=\"card-header\">\r\n          <h5 className=\"card-title\">\r\n            {id===\"\"? \"Thêm công việc\" : \"Cập Nhật Công Việc\"}\r\n            <span\r\n              className=\"text-right hv\"\r\n              onClick={this.onCloseForm}\r\n            ><i className=\"fa fa-times-circle\"></i></span>\r\n          </h5>\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <form onSubmit={this.onSubmit}>\r\n            <div className=\"form-group\">\r\n              <label>Tên công việc:</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name='name'\r\n                placeholder=\"Nhập tên công việc\"\r\n                value={this.state.name}\r\n                onChange={this.onChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label>Trạng thái:</label>\r\n              <select\r\n                className=\"form-control\" \r\n                name=\"status\"\r\n                value={this.state.status}\r\n                onChange={this.onChange}>\r\n                <option value={false}>Ẩn</option>\r\n                <option value={true}>Kích hoạt</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"text-center\">\r\n              <button type=\"submit\" className=\"btn btn-primary\">\r\n                <span className=\"fa fa-plus mr-5\"></span>\r\n                Save\r\n              </button>\r\n              &nbsp;\r\n              <button \r\n                type=\"Button\" \r\n                className=\"btn btn-danger\"\r\n                onClick={this.onClear}>\r\n                <span className=\"fa fa-times mr-5\"></span>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskForm;\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\n\r\nclass Search extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      keyWord:\"\"\r\n    }\r\n  }\r\n\r\n  onSearch=()=>{\r\n    this.props.onSearch(this.state.keyWord);\r\n  }\r\n\r\n  onChange=(event)=>{\r\n    let target=event.target;\r\n    let name=target.name;\r\n    let value=target.value;\r\n    this.setState({\r\n      [name]:value\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n        <div className=\"col-6\">\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"keyWord\"\r\n              className=\"form-control\"\r\n              placeholder=\"Nhập từ khóa...\"\r\n              aria-label=\"Nhập từ khóa...\"\r\n              aria-describedby=\"basic-addon2\"\r\n              value={this.state.keyWord}\r\n              onChange={this.onChange}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button \r\n                className=\"btn btn-primary\" type=\"button\"\r\n                onClick={this.onSearch}\r\n              >\r\n                <span className=\"fa fa-search mr-5\"></span>\r\n                Search\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\n\r\nclass Sort extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     sortBy: \"name\",\r\n  //     sortValue: \"a\",\r\n  //   };\r\n  // }\r\n\r\n   componentWillReceiveProps(nextProps) {\r\n   // console.log(nextProps);\r\n   }\r\n\r\n  onClick = (sortBy, sortValue) => {\r\n    this.props.onSort(sortBy,sortValue);\r\n  };\r\n\r\n  render() {\r\n   \r\n   let {sortBy,sortValue}=this.props;\r\n    return (\r\n      <div className=\"col-6\">\r\n        <div className=\"btn-group\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-primary dropdown-toggle\"\r\n            data-toggle=\"dropdown\"\r\n            aria-haspopup=\"true\"\r\n            aria-expanded=\"false\"\r\n          >\r\n            Sort\r\n            <span className=\"far fa-caret-square-down ml-5\"></span>\r\n          </button>\r\n          <div className=\"dropdown-menu\">\r\n            <ul className=\"padding-5\">\r\n              <li\r\n                onClick={() => {\r\n                  this.onClick(\"name\", \"a\");\r\n                }}\r\n                type=\"button\"\r\n                className=\"dropdown-item\"\r\n              >\r\n                <span className=\"fas fa-sort-alpha-down\" /> Tên A-Z\r\n                {sortBy === \"name\" &&\r\n                  sortValue === \"a\" && (\r\n                    <span className=\"sortSelected fas fa-check\"></span>\r\n                  )}\r\n              </li>\r\n              <li\r\n                onClick={() => {\r\n                  this.onClick(\"name\", \"b\");\r\n                }}\r\n                type=\"button\"\r\n                className=\"dropdown-item\"\r\n              >\r\n                <span className=\"fas fa-sort-alpha-down-alt\" /> Tên Z-A\r\n                <span\r\n                  className={\r\n                    sortBy === \"name\" && sortValue === \"b\"\r\n                      ? \"sortSelected fas fa-check\"\r\n                      : \"\"\r\n                  }\r\n                />\r\n              </li>\r\n              <div className=\"dropdown-divider\"></div>\r\n              <li\r\n                onClick={() => {\r\n                  this.onClick(\"status\", \"a\");\r\n                }}\r\n                type=\"button\"\r\n                className=\"dropdown-item\"\r\n              >\r\n                <span className=\"\"> Trạng thái kích hoạt</span>\r\n                <span\r\n                  className={\r\n                    sortBy === \"status\" &&\r\n                    sortValue === \"a\"\r\n                      ? \"sortSelected fas fa-check\"\r\n                      : \"\"\r\n                  }\r\n                ></span>\r\n              </li>\r\n              <li\r\n                onClick={() => {\r\n                  this.onClick(\"status\", \"b\");\r\n                }}\r\n                type=\"button\"\r\n                className=\"dropdown-item\"\r\n              >\r\n                <span className=\"\"> Trạng thái ẩn</span>\r\n                <span\r\n                  className={\r\n                    sortBy === \"status\" &&\r\n                    sortValue === \"b\"\r\n                      ? \"sortSelected fas fa-check\"\r\n                      : \"\"\r\n                  }\r\n                ></span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sort;\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport Search from \"../components/Search\";\r\nimport Sort from \"../components/Sort\";\r\n\r\nclass Control extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row mt-15\">\r\n        <Search onSearch={this.props.onSearch}></Search>\r\n        <Sort \r\n          onSort={this.props.onSort}\r\n          sortBy={this.props.sortBy}\r\n          sortValue={this.props.sortValue}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Control;\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\n\r\nclass TaskItem extends Component {\r\n\r\n  onUpdateStatus=()=>{\r\n    this.props.onUpdateStatus(this.props.task.id);\r\n  }\r\n  onDelete=()=>{\r\n    this.props.onDelete(this.props.task.id);\r\n  }\r\n\r\n  onUpdate=()=>{\r\n    this.props.onUpdate(this.props.task.id);\r\n  }\r\n  \r\n  render() {\r\n    let { task, index } = this.props;\r\n    return (\r\n      <tr>\r\n        <td>{index+1}</td>\r\n        <td>{task.name}</td>\r\n        <td className=\"text-center\">\r\n          <span \r\n            className={task.status===true ? \"badge badge-danger hv-click\": \"badge badge-success hv-click\"}\r\n            onClick={this.onUpdateStatus}\r\n          >\r\n            {task.status===true ? \"kích hoạt\":\"Ẩn\"}</span>\r\n        </td>\r\n        <td className=\"text-center\">\r\n          <button \r\n            className=\"btn btn-warning\"\r\n            onClick={this.onUpdate}\r\n          >\r\n            <span className=\"fas fa-pencil-alt mr-5\"></span>\r\n            Sữa\r\n          </button>{\" \"}\r\n          &nbsp;\r\n          <button \r\n            className=\"btn btn-danger\"\r\n            onClick={this.onDelete}\r\n          >\r\n            <span className=\"fas fa-trash-alt mr-5\"></span>\r\n            Xóa\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskItem;\r\n","import React, { Component } from \"react\";\r\nimport \"../App.css\";\r\nimport TaskItem from \"../components/TaskItem\";\r\n\r\nclass TaskList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      filterName:\"\",\r\n      filterStatus:-1\r\n    }\r\n  }\r\n\r\n  onChange=(event)=>{\r\n    let target=event.target;\r\n    let name=target.name;\r\n    let value=target.value;\r\n    this.props.onFilter(name==='filterName'? value : this.state.filterName,\r\n                        name==='filterStatus'? value : this.state.filterStatus);\r\n    this.setState({\r\n      [name]:value\r\n    });\r\n  }\r\n\r\n  render() {\r\n      let tasks=this.props.tasks;\r\n      let elmtasks=tasks.map((task,index)=>{\r\n          return <TaskItem \r\n                    key={task.id} \r\n                    index={index} \r\n                    task={task}\r\n                    onUpdateStatus={this.props.onUpdateStatus}\r\n                    onDelete={this.props.onDelete}\r\n                    onUpdate={this.props.onUpdate}\r\n                    />;\r\n      })\r\n    return (\r\n      <div className=\"col-12\">\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">STT</th>\r\n              <th scope=\"col\">Tên</th>\r\n              <th scope=\"col\">Trạng thái</th>\r\n              <th scope=\"col\">Hành động</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr className=\"height-5\">\r\n              <td></td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"filterName\"\r\n                  onChange={this.onChange}\r\n                ></input>\r\n              </td>\r\n              <td>\r\n                <select \r\n                  className=\"form-control\" \r\n                  name=\"filterStatus\"\r\n                  onChange={this.onChange}\r\n                >\r\n                  <option value=\"-1\">Tất cả</option>\r\n                  <option value=\"0\">Ẩn</option>\r\n                  <option value=\"1\">Kích hoạt</option>\r\n                </select>\r\n              </td>\r\n              <td></td>\r\n            </tr>\r\n            {elmtasks}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskList;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport TaskForm from \"./components/TaskForm\";\nimport Control from \"./components/Control\";\nimport TaskList from \"./components/TaskList\";\n\nimport { findIndex, orderBy } from \"lodash\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tasks: [],\n      isDisplayForm: false,\n      taskEditting: null,\n      filter: {\n        name: \"\",\n        status: -1,\n      },\n      keyWord: \"\",\n      sortBy: \"name\",\n      sortValue: \"a\",\n    };\n  }\n  componentWillMount() {\n    if (localStorage && localStorage.getItem(\"tasks\")) {\n      let tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n      this.setState({\n        tasks: tasks,\n      });\n    }\n  }\n\n  s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n\n  generateID() {\n    return this.s4() + this.s4() + \"-\" + this.s4() + this.s4();\n  }\n\n  onToggleForm = () => {\n    if (this.state.isDisplayForm && this.state.taskEditting !== null) {\n      this.setState({\n        isDisplayForm: true,\n        taskEditting: null,\n      });\n    } else {\n      this.setState({\n        isDisplayForm: !this.state.isDisplayForm,\n        taskEditting: null,\n      });\n    }\n  };\n\n  onCloseForm = () => {\n    this.setState({\n      isDisplayForm: false,\n    });\n  };\n\n  onSubmitForm = (data) => {\n    let { tasks } = this.state;\n    if (data.id === \"\") {\n      data.id = this.generateID();\n      tasks.push(data);\n    } else {\n      tasks[this.findIndexByID(data.id)] = data;\n    }\n\n    this.setState({\n      tasks: tasks,\n      taskEditting: null,\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  onUpdateStatus = (id) => {\n    let { tasks } = this.state;\n    let newTasks = tasks.map((task) => {\n      if (task.id === id) {\n        task.status = !task.status;\n      }\n      return task;\n    });\n    this.setState({\n      tasks: newTasks,\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  };\n\n  onDelete = (id) => {\n    let { tasks } = this.state;\n    tasks.forEach((task, index) => {\n      if (task.id === id) {\n        tasks.splice(index, 1);\n      }\n    });\n    this.setState({\n      tasks: tasks,\n    });\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n    this.onCloseForm();\n  };\n\n  findIndexByID = (id) => {\n    let { tasks } = this.state;\n    let temp = -1;\n    tasks.forEach((task, index) => {\n      if (task.id === id) {\n        temp = index;\n      }\n    });\n    return temp;\n  };\n\n  onShowForm = () => {\n    this.setState({\n      isDisplayForm: true,\n    });\n  };\n\n  onUpdate = (id) => {\n    let { tasks } = this.state;\n    //let index=this.findIndexByID(id);\n    let index = findIndex(tasks, (task) => {\n      return task.id === id;\n    });\n    let taskEditting = tasks[index];\n\n    this.setState({\n      taskEditting: taskEditting,\n    });\n    this.onShowForm();\n  };\n\n  onFilter = (filterName, filterStatus) => {\n    filterStatus = parseInt(filterStatus, 10);\n    this.setState({\n      filter: {\n        name: filterName.toLowerCase(),\n        status: filterStatus,\n      },\n    });\n  };\n\n  onSearch = (keyword) => {\n    this.setState({\n      keyWord: keyword,\n    });\n  };\n\n  onSort = (sortBy, sortValue) => {\n    this.setState({\n      sortBy: sortBy,\n      sortValue: sortValue,\n    });\n  };\n\n  render() {\n    let {\n      tasks,\n      isDisplayForm,\n      filter,\n      keyWord,\n      sortBy,\n      sortValue,\n    } = this.state; //<=> let tasks = this.state.tasks\n\n    //----------------filter----------------------------\n    if (filter) {\n      if (filter.name) {\n        tasks = tasks.filter((task) => {\n          return task.name.toLowerCase().indexOf(filter.name) !== -1;\n        });\n      }\n      tasks = tasks.filter((task) => {\n        if (filter.status === -1) return task;\n        else {\n          return task.status === (filter.status === 1 ? true : false);\n        }\n      });\n    }\n    if (keyWord) {\n      tasks = tasks.filter((task) => {\n        return task.name.toLowerCase().indexOf(keyWord.toLowerCase()) !== -1;\n      });\n    }\n    //----------sort--------------------\n    if (sortBy === \"name\") {\n      if (sortValue === \"a\") tasks = orderBy(tasks, [\"name\"], [\"asc\"]);\n      else tasks = orderBy(tasks, [\"name\"], [\"desc\"]);\n    } else {\n      if (sortValue === \"a\") tasks = orderBy(tasks, [\"status\"], [\"desc\"]);\n      else tasks = orderBy(tasks, [\"status\"], [\"asc\"]);\n    }\n\n    let elmTaskForm = isDisplayForm ? (\n      <TaskForm\n        onSubmitForm={this.onSubmitForm}\n        onCloseForm={this.onCloseForm}\n        task={this.state.taskEditting}\n      />\n    ) : (\n      \"\"\n    );\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <div className=\"text-center\">\n            <h1>Quảng lý công việc</h1>\n          </div>\n          <div className=\"row text-left\">\n            <div className={isDisplayForm ? \"col-4\" : \"\"}>{elmTaskForm}</div>\n            <div className={isDisplayForm ? \"col-8\" : \"col-12\"}>\n              <button\n                onClick={this.onToggleForm}\n                type=\"Button\"\n                className=\"btn btn-primary\"\n              >\n                <span className=\"fa fa-plus mr-5\"></span>\n                Thêm công việc\n              </button>{\" \"}\n              <div>\n                <Control\n                  onSearch={this.onSearch}\n                  onSort={this.onSort}\n                  sortBy={sortBy}\n                  sortValue={sortValue}\n                />\n              </div>\n              <div className=\"row\">\n                <TaskList\n                  tasks={tasks}\n                  onUpdateStatus={this.onUpdateStatus}\n                  onDelete={this.onDelete}\n                  onUpdate={this.onUpdate}\n                  onFilter={this.onFilter}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}